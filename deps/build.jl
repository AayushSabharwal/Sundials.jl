using BinaryProvider

# This is where all binaries will get installed
const prefix = Prefix(!isempty(ARGS) ? ARGS[1] : joinpath(@__DIR__,"usr"))

libsundials_nvecserial       = LibraryProduct(prefix, String["libsundials_nvecserial"])
libsundials_kinsol           = LibraryProduct(prefix, String["libsundials_kinsol"])
libsundials_cvodes           = LibraryProduct(prefix, String["libsundials_cvodes"])
libsundials_idas             = LibraryProduct(prefix, String["libsundials_idas"])
libsundials_sunlinsolspfgmr  = LibraryProduct(prefix, String["libsundials_sunlinsolspfgmr"])
libsundials_sunmatrixdense   = LibraryProduct(prefix, String["libsundials_sunmatrixdense"])
libsundials_sunlinsolspbcgs  = LibraryProduct(prefix, String["libsundials_sunlinsolspbcgs"])
libsundials_sunlinsoldense   = LibraryProduct(prefix, String["libsundials_sunlinsoldense"])
libsundials_sunlinsolspgmr   = LibraryProduct(prefix, String["libsundials_sunlinsolspgmr"])
libsundials_sunlinsolpcg     = LibraryProduct(prefix, String["libsundials_sunlinsolpcg"])
libsundials_sunlinsolsptfqmr = LibraryProduct(prefix, String["libsundials_sunlinsolsptfqmr"])
libsundials_sunmatrixsparse  = LibraryProduct(prefix, String["libsundials_sunmatrixsparse"])
libsundials_sunlinsolband    = LibraryProduct(prefix, String["libsundials_sunlinsolband"])
libsundials_sunmatrixband    = LibraryProduct(prefix, String["libsundials_sunmatrixband"])
libsundials_arkode           = LibraryProduct(prefix, String["libsundials_arkode"])

products = [
libsundials_nvecserial,
libsundials_kinsol,
libsundials_cvodes,
libsundials_idas,
libsundials_sunlinsolspfgmr,
libsundials_sunmatrixdense,
libsundials_sunlinsolspbcgs,
libsundials_sunlinsoldense,
libsundials_sunlinsolspgmr,
libsundials_sunlinsolpcg,
libsundials_sunlinsolsptfqmr,
libsundials_sunmatrixsparse,
libsundials_sunlinsolband,
libsundials_sunmatrixband,
libsundials_arkode,
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaDiffEq/SundialsBuilder/releases/download/dummy-0.0.2"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    BinaryProvider.Linux(:aarch64, :glibc) => ("$bin_prefix/Sundials.aarch64-linux-gnu.tar.gz", "8530c557cd2e7828712ec5aa5c811d3cd9310ecee5b0e99b4d65df90c491c6b7"),
    BinaryProvider.Linux(:armv7l, :glibc) => ("$bin_prefix/Sundials.arm-linux-gnueabihf.tar.gz", "fb3df19c33c02dcb41bd1801b1568bebbec83f2500e24f5cf952a49ab1362cac"),
    BinaryProvider.Linux(:i686, :glibc) => ("$bin_prefix/Sundials.i686-linux-gnu.tar.gz", "7edb59474f419a7bae0dbf09ab603433ee56aa79987a2f4b58d7ae193165558a"),
    BinaryProvider.Windows(:i686) => ("$bin_prefix/Sundials.i686-w64-mingw32.tar.gz", "fab449af574ffc8fb5fc8ba28bed0d40de715e99cfae09ba26f530863fc0f547"),
    BinaryProvider.Linux(:powerpc64le, :glibc) => ("$bin_prefix/Sundials.powerpc64le-linux-gnu.tar.gz", "a6511cde4f5934d53d648e8ba60eff5a0b39283b674bb3140b9f0f6cc304eec4"),
    BinaryProvider.MacOS() => ("$bin_prefix/Sundials.x86_64-apple-darwin14.tar.gz", "ea196ceeb32c5d6c22918209041f737df31aa3a9ebc99bbf6be75a30db05324b"),
    BinaryProvider.Linux(:x86_64, :glibc) => ("$bin_prefix/Sundials.x86_64-linux-gnu.tar.gz", "b3de5d6721a893bd3995a8cc40c39dac2b0659b5992f7f964d4cf3946bcfbbab"),
    BinaryProvider.Windows(:x86_64) => ("$bin_prefix/Sundials.x86_64-w64-mingw32.tar.gz", "74e961dcf45ff76220ed038cbcab68e2b92973370d9b7be1ffbbbd3bf6722c5d"),
)
if platform_key() in keys(download_info)
    # First, check to see if we're all satisfied
    if any(!satisfied(p; verbose=true) for p in products)
        # Download and install binaries
        url, tarball_hash = download_info[platform_key()]
        install(url, tarball_hash; prefix=prefix, force=true, verbose=true)
    end

    # Finally, write out a deps.jl file that will contain mappings for each
    # named product here: (there will be a "libfoo" variable and a "fooifier"
    # variable, etc...)
    @write_deps_file libsundials_kinsol libsundials_idas libsundials_nvecserial libsundials_cvodes libsundials_sunlinsolspfgmr  libsundials_sunmatrixdense libsundials_sunlinsolspbcgs libsundials_sunlinsoldense libsundials_sunlinsolspgmr  libsundials_sunlinsolpcg libsundials_sunlinsolsptfqmr libsundials_sunmatrixsparse libsundials_sunlinsolband libsundials_sunmatrixband libsundials_arkode
else
    error("Your platform $(Sys.MACHINE) is not supported by this package!")
end
