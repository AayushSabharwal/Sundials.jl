using BinaryProvider

# This is where all binaries will get installed
const prefix = Prefix(!isempty(ARGS) ? ARGS[1] : joinpath(@__DIR__,"usr"))

libsundials_nvecserial       = LibraryProduct(prefix, String["libsundials_nvecserial"])
libsundials_kinsol           = LibraryProduct(prefix, String["libsundials_kinsol"])
libsundials_cvodes           = LibraryProduct(prefix, String["libsundials_cvodes"])
libsundials_idas             = LibraryProduct(prefix, String["libsundials_idas"])
libsundials_sunlinsolspfgmr  = LibraryProduct(prefix, String["libsundials_sunlinsolspfgmr"])
libsundials_sunmatrixdense   = LibraryProduct(prefix, String["libsundials_sunmatrixdense"])
libsundials_sunlinsolspbcgs  = LibraryProduct(prefix, String["libsundials_sunlinsolspbcgs"])
libsundials_sunlinsoldense   = LibraryProduct(prefix, String["libsundials_sunlinsoldense"])
libsundials_sunlinsolspgmr   = LibraryProduct(prefix, String["libsundials_sunlinsolspgmr"])
libsundials_sunlinsolpcg     = LibraryProduct(prefix, String["libsundials_sunlinsolpcg"])
libsundials_sunlinsolsptfqmr = LibraryProduct(prefix, String["libsundials_sunlinsolsptfqmr"])
libsundials_sunmatrixsparse  = LibraryProduct(prefix, String["libsundials_sunmatrixsparse"])
libsundials_sunlinsolband    = LibraryProduct(prefix, String["libsundials_sunlinsolband"])
libsundials_sunmatrixband    = LibraryProduct(prefix, String["libsundials_sunmatrixband"])
libsundials_arkode           = LibraryProduct(prefix, String["libsundials_arkode"])

products = [
libsundials_nvecserial,
libsundials_kinsol,
libsundials_cvodes,
libsundials_idas,
libsundials_sunlinsolspfgmr,
libsundials_sunmatrixdense,
libsundials_sunlinsolspbcgs,
libsundials_sunlinsoldense,
libsundials_sunlinsolspgmr,
libsundials_sunlinsolpcg,
libsundials_sunlinsolsptfqmr,
libsundials_sunmatrixsparse,
libsundials_sunlinsolband,
libsundials_sunmatrixband,
libsundials_arkode,
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaDiffEq/SundialsBuilder/releases/download/sundials-3.1.0-2"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    BinaryProvider.Linux(:aarch64, :glibc) => ("$bin_prefix/Sundials.aarch64-linux-gnu.tar.gz", "a6a8894a48c8ff93d28d437e5efd378933707b65c054f0c1feb9897964bb7c11"),
    BinaryProvider.Linux(:armv7l, :glibc) => ("$bin_prefix/Sundials.arm-linux-gnueabihf.tar.gz", "b2c4379a211250cbaeb73e21e0a4a893fb3ac3255212039879d4fcdfd54e34ac"),
    BinaryProvider.Linux(:i686, :glibc) => ("$bin_prefix/Sundials.i686-linux-gnu.tar.gz", "616525eb308bedb2d09486ec7783362856e21b56473c47a6e06eded94c25f0d9"),
    BinaryProvider.Windows(:i686) => ("$bin_prefix/Sundials.i686-w64-mingw32.tar.gz", "e6b629e341ec5475846d87da991089b28a8992bfe32f073b62d819bd2d342c7d"),
    BinaryProvider.Linux(:powerpc64le, :glibc) => ("$bin_prefix/Sundials.powerpc64le-linux-gnu.tar.gz", "2354d4a22b7be8ab208457f8863953d23628200af83e4f735ec26f52c526a94c"),
    BinaryProvider.MacOS() => ("$bin_prefix/Sundials.x86_64-apple-darwin14.tar.gz", "d39bcc4f724c742ab966c46391989226b1654dbfc152f55ae5a5fd19b2eaf9bd"),
    BinaryProvider.Linux(:x86_64, :glibc) => ("$bin_prefix/Sundials.x86_64-linux-gnu.tar.gz", "40f55bea93a6bb5cdd07537e2bee3be230dfef30605ccb385c9234ffb5f15fb9"),
    BinaryProvider.Windows(:x86_64) => ("$bin_prefix/Sundials.x86_64-w64-mingw32.tar.gz", "a3888df5b793e310e88efc2356f149e5d5258f6aa7d5627420e3ae0302e330c7"),
)
if platform_key() in keys(download_info)
    # First, check to see if we're all satisfied
    if any(!satisfied(p; verbose=true) for p in products)
        # Download and install binaries
        url, tarball_hash = download_info[platform_key()]
        install(url, tarball_hash; prefix=prefix, force=true, verbose=true)
    end

    # Finally, write out a deps.jl file that will contain mappings for each
    # named product here: (there will be a "libfoo" variable and a "fooifier"
    # variable, etc...)
    @write_deps_file libsundials_kinsol libsundials_idas libsundials_nvecserial libsundials_cvodes libsundials_sunlinsolspfgmr  libsundials_sunmatrixdense libsundials_sunlinsolspbcgs libsundials_sunlinsoldense libsundials_sunlinsolspgmr  libsundials_sunlinsolpcg libsundials_sunlinsolsptfqmr libsundials_sunmatrixsparse libsundials_sunlinsolband libsundials_sunmatrixband libsundials_arkode
else
    error("Your platform $(Sys.MACHINE) is not supported by this package!")
end
